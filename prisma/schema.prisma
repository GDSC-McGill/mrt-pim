// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Next auth - Dont touch
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Next auth - Dont touch
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role[]
  sessions      Session[]
}

enum Role {
  ADMIN
  USER
}

model Board {
  id         String               @id @default(cuid())
  name       String               @unique
  components ComponentsOnBoards[]
}

model ComponentsOnBoards {
  board          Board     @relation(fields: [boardId], references: [id])
  boardId        String
  component      Component @relation(fields: [componentId], references: [id])
  componentId    String
  amountRequired Int

  @@id([boardId, componentId])
}

model Component {
  id                 String               @id @default(cuid())
  name               String               @unique
  boards             ComponentsOnBoards[]
  amountAvailable    Int
  ComponentsOnOrders ComponentsOnOrders[]
}

model ComponentsOnOrders {
  order         Order     @relation(fields: [orderId], references: [id])
  orderId       String
  component     Component @relation(fields: [componentId], references: [id])
  componentId   String
  amountOrdered Int

  @@id([orderId, componentId])
}

model Order {
  id String @id @default(cuid())

  ComponentsOnOrders ComponentsOnOrders[]
  Receipt            Receipt[]
}

model Receipt {
  id      String @id @default(cuid())
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String
}
